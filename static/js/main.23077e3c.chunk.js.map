{"version":3,"sources":["components/BarChart.js","components/LineChart.js","components/DoughnutChart.js","components/PieChart.js","components/PolarChart.js","App.js","index.js"],"names":["BarChart","props","canvasRef","React","createRef","this","myChart","data","labels","map","d","label","datasets","value","update","Chart","current","type","options","maintainAspectRatio","scales","yAxes","ticks","min","max","title","backgroundColor","color","createElement","ref","Component","LineChart","time","xAxes","unit","fill","pointRadius","borderColor","borderWidth","lineTension","DoughnutChart","colors","PieChart","PolarChart","getRandomArray","numItems","i","push","Math","round","random","getRandomDateArray","baseTime","Date","getTime","getData","App","state","feeds","window","setInterval","console","log","setState","className","classNmae","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23077e3c.chunk.js","sourcesContent":["import React from 'react';\nimport Chart from 'chart.js';\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.label);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'bar',\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [\n          {\n            ticks: {\n              min: 0,\n              max: 100 } }] } },\n      data: {\n        labels: this.props.data.map(d => d.label),\n        datasets: [{\n          label: this.props.title,\n          data: this.props.data.map(d => d.value),\n          backgroundColor: this.props.color }] } });\n  }\n\n  render() {\n    return (\n      React.createElement(\"canvas\", { ref: this.canvasRef }));\n\n  }}\n\nexport default BarChart;\n","import React from 'react';\nimport Chart from 'chart.js';\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.time);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'line',\n      options: {\n\t\t\t  maintainAspectRatio: false,\n        scales: {\n          xAxes: [\n            {\n              type: 'time',\n              time: {\n                unit: 'week'\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                min: 0\n              }\n            }\n          ]\n        }\n      },\n      data: {\n        labels: this.props.data.map(d => d.time),\n        datasets: [{\n          label: this.props.title,\n          data: this.props.data.map(d => d.value),\n          fill: 'none',\n          backgroundColor: this.props.color,\n          pointRadius: 2,\n          borderColor: this.props.color,\n          borderWidth: 1,\n          lineTension: 0\n        }]\n      }\n    });\n  }\n\n  render() {\n    return <canvas ref={this.canvasRef} />;\n  }\n}\n\nexport default LineChart;\n","\nimport React from 'react';\nimport Chart from 'chart.js';\n\nclass DoughnutChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.label);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'doughnut',\n      options: {\n\t      maintainAspectRatio: false\n      },\n      data: {\n        labels: this.props.data.map(d => d.label),\n        datasets: [{\n          data: this.props.data.map(d => d.value),\n          backgroundColor: this.props.colors\n        }]\n      }\n    });\n\n  }\n\n\n  render() {\n    return <canvas ref={this.canvasRef} />;\n  }\n}\n\nexport default DoughnutChart;\n","\nimport React from 'react';\nimport Chart from 'chart.js';\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.label);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'pie',\n      options: {\n\t      maintainAspectRatio: false\n      },\n      data: {\n        labels: this.props.data.map(d => d.label),\n        datasets: [{\n          data: this.props.data.map(d => d.value),\n          backgroundColor: this.props.colors\n        }]\n      }\n    });\n\n  }\n\n\n  render() {\n    return <canvas ref={this.canvasRef} />;\n  }\n}\n\nexport default PieChart;\n","\nimport React from 'react';\nimport Chart from 'chart.js';\n\nclass PolarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.label);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'polarArea',\n      options: {\n\t      maintainAspectRatio: false\n      },\n      data: {\n        labels: this.props.data.map(d => d.label),\n        datasets: [{\n          data: this.props.data.map(d => d.value),\n          backgroundColor: this.props.colors\n        }]\n      }\n    });\n\n  }\n\n\n  render() {\n    return <canvas ref={this.canvasRef} />;\n  }\n}\n\nexport default PolarChart;\n","import React from 'react';\nimport BarChart from './components/BarChart'; \nimport LineChart from './components/LineChart'; \nimport DoughnutChart from './components/DoughnutChart'; \nimport PieChart from './components/PieChart'; \nimport PolarChart from './components/PolarChart'; \n\n\n\n// Data generation\nfunction getRandomArray(numItems) {\n  // Create random array of objects\n  let names = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let data = [];\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      label: names[i],\n      value: Math.round(20 + 80 * Math.random()) });\n\n  }\n  return data;\n}\n\nfunction getRandomDateArray(numItems) {\n  // Create random array of objects (with date)\n  let data = [];\n  let baseTime = new Date('2020-01-01T00:00:00').getTime();\n  let dayMs = 24 * 60 * 60 * 1000;\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      time: new Date(baseTime + i * dayMs),\n      value: Math.round(20 + 80 * Math.random()) });\n\n  }\n  return data;\n}\n\nfunction getData() {\n  let data = [];\n\n  data.push({\n    title: 'Visits',\n    data: getRandomDateArray(90) });\n\n\n  data.push({\n    title: 'Categories',\n    data: getRandomArray(20) });\n\n\n  data.push({\n    title: 'Categories',\n    data: getRandomArray(10) });\n\n\n  data.push({\n    title: 'Data 4',\n    data: getRandomArray(6) });\n\n  data.push({\n    title: 'Data 5',\n    data: getRandomArray(5) });\n  data.push({\n    title: 'Data 6',\n    data: getRandomArray(10) });\n\n  return data;\n}\n\n\n\nclass App extends React.Component{\n  constructor(props){\n\t  super(props);\n\t  this.state = {\n\t\t  feeds:getData()\n\t  };\n  }\n\t  componentDidMount() {\n    window.setInterval(() => {\n\t    console.log('refreshing');\n      this.setState({\n        feeds: getData() });\n\n    }, 5000);\n  }\n\nrender(){\n\treturn (\n\t\t<div className=\"App\">\n\t\t<div classNmae=\"main chart-wrapper\">\n\t\t\t<LineChart\n\t\t\t\tdata={this.state.feeds[0].data}\n\t\t\t\ttitle={this.state.feeds[0].title}\n\t\t\t\tcolor=\"#70CAD1\"\n\t\t\t/>\n\t\t</div>\n\t\t<div className=\"sub chart-wrapper\">\n\t\t\t<BarChart\n\t\t\t\tdata={this.state.feeds[1].data}\n\t\t\t\ttitle={this.state.feeds[1].title}\n\t\t\t\tcolor=\"#70CAD1\"\n\t\t\t/>\n\t\t</div>\n\t\t<div className=\"sub chart-wrapper\">\n\t\t\t<BarChart\n\t\t\t\tdata={this.state.feeds[2].data}\n\t\t\t\ttitle={this.state.feeds[2].title}\n\t\t\t\tcolor=\"#7070D1\"\n\t\t\t/>\n\t\t</div>\n\t\t<div className=\"sub chart-wrapper\">\n\t\t\t<DoughnutChart\n\t\t\t\tdata={this.state.feeds[3].data}\n\t\t\t\ttitle={this.state.feeds[3].title}\n\t\t        colors= {['#a8e0ff', '#8ee3f5', '#70cad1', '#3e517a', '#b08ea2', '#BBB6DF'] }\n\t\t\t/>\n\t\t</div>\n<div className=\"sub chart-wrapper\">\n\t\t\t<PieChart\n\t\t\t\tdata={this.state.feeds[4].data}\n\t\t\t\ttitle={this.state.feeds[4].title}\n\t\t        colors= {['#a8e0ff', '#8ee3f5', '#70cad1', '#3e517a', '#b08ea2', '#BBB6DF'] }\n\t\t\t/>\n\t\t</div>\n\t\t<div className=\"sub chart-wrapper\">\n\t\t\t<PolarChart\n\t\t\t\tdata={this.state.feeds[5].data}\n\t\t\t\ttitle={this.state.feeds[5].title}\n\t\t        colors= {['#a8e0ff', '#8ee3f5', '#70cad1', '#3e517a', '#b08ea2', '#BBB6DF'] }\n\t\t\t/>\n\t\t</div>\n\n\t\t</div>\n\t);\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}